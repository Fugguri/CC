import gspread
from whatsapp_api_client_python import API
from datetime import datetime 
import logging

logging.basicConfig(filename="main.log",level=logging.DEBUG,
                    format='%(asctime)s %(message)s',
) 
#Creating an object of the logging 
logger=logging.getLogger() 
 
#Setting the threshold of logger to DEBUG 
logger.setLevel(logging.INFO) 

ID_INSTANCE, API_TOKEN_INSTANCE = "1101807848", "3fb8e25cb35c40c9a04ce00768ad69b6f7e151848abf409fa6"

greenAPI = API.GreenApi(ID_INSTANCE, API_TOKEN_INSTANCE)

text_of_good_degree = '''–°–ø–∞—Å–∏–±–æ –∑–∞ –í—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É!
–£ –Ω–∞—Å –µ—Å—Ç—å –¥–ª—è —Ç–µ–±—è —Å—é—Ä–ø—Ä–∏–∑ üéÅ
–û—Å—Ç–∞–≤—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ –°–£–ü–ï–†–¢–Ø–ñ_–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç–∞—Ö –∏ –ø–æ–ª—É—á–∏ –†–æ–ª–ª _ –≤ –ø–æ–¥–∞—Äs–æ–∫ üòç
–ù—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ https://yandex.com/maps/org/178435528058 –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –Ω–∞—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º —Å–∫—Ä–∏–Ω, –∞ –º—ã –ø—Ä–∏–≤–µ–∑–µ–º —Ç–µ–±–µ —Ä–æ–ª–ª ¬´–ê–ª—è—Å–∫–∞ —Å –õ–æ—Å–æ—Å–µ–º¬ª –≤ –ø–æ–¥–∞—Ä–æ–∫, –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–∫–∞–∑—É)


–°–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è!'''

text_of_not_good_degree = """–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! 
–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞. 
–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –∫–æ–≥–¥–∞ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª—Å—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å —Å–ª–æ–∂–∏–≤—à—É—é—Å—è —Å–∏—Ç—É–∞—Ü–∏—é –∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ø—Ä–æ–±–ª–µ–º–µ. 
–°–ø–∞—Å–∏–±–æ!
"""

user_data = {}

def onEvent(typeWebhook, body):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–π –∏–ª–∏ –∏—Å—Ö–æ–¥—è—â–∏–π"""
    if typeWebhook == 'incomingMessageReceived':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–µ–µ
        senderData = body["senderData"]
        """–°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"""
        chatId = senderData["chatId"]
        sender = senderData["sender"].replace("@c.us", "")
        senderName = senderData["senderName"]
        # print(chatId)
        # print(sender)
        # print(senderName)
        try:
            user_data[sender]
        except:
            user_data[sender] = {}

        messageData = body["messageData"]
        """–°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        typeMessage = messageData["typeMessage"]
        messageData = body["messageData"]
        """–°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        typeMessage = messageData["typeMessage"]
        try:
            textMessageData = messageData["textMessageData"]
            """–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
            textMessage = textMessageData["textMessage"]  
            try:
                user_data[sender]["degree"]
                is_degree = True
            except:
                is_degree = False

            # if is_degree and "–∫–æ–Ω—Ç–∞–∫—Ç" in textMessage.lower():
            #     user_data[sender]["contact"] = textMessage
            #     greenAPI.sending.sendMessage(
            #         chatId=chatId, message="–°–ø–∞—Å–∏–±–æ, –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º.")
            #     degree, sender, comment, contact = user_data[sender][
            #         "degree"], sender, user_data[sender]["comment"], user_data[sender]["contact"]
            #     sheets_append_row(degree, sender, comment, contact)

            if "5" in textMessage:
                
                a = greenAPI.sending.sendMessage(
                    chatId=chatId, message=text_of_good_degree)
                logger.info(a) 
                logger.info(body)
                sheets_append_row(5, sender,textMessage)
            if "1" in textMessage:
                user_data[sender]["degree"] = 1
                comment = textMessage
                user_data[sender]["comment"] = comment
                
                a = greenAPI.sending.sendMessage(
                    chatId=chatId, message=text_of_not_good_degree)
                logger.info(a) 
                logger.info(body)
                sheets_append_row(1, sender, comment)
            if "2" in textMessage:
                user_data[sender]["degree"] = 2
                comment = textMessage
                user_data[sender]["comment"] = comment
                a = greenAPI.sending.sendMessage(
                    chatId=chatId, message=text_of_not_good_degree)
                logger.info(a) 
                logger.info(body) 
                sheets_append_row(2, sender, comment)
            if "3" in textMessage:
                user_data[sender]["degree"] = 3
                comment = textMessage
                user_data[sender]["comment"] = comment
                a = greenAPI.sending.sendMessage(
                    chatId=chatId, message=text_of_not_good_degree)
                logger.info(a) 
                logger.info(body)
                
                sheets_append_row(3, sender, comment)
            if "4" in textMessage:
                user_data[sender]["degree"] = 4
                comment = textMessage
                user_data[sender]["comment"] = comment
                a = greenAPI.sending.sendMessage(
                    chatId=chatId, message=text_of_not_good_degree)
                logger.info(a) 
                logger.info(body)
                sheets_append_row(4, sender, comment)

            # if "5" in textMessage:
            #     index = textMessage.index("5")
            #     next_simbol = textMessage[index+1]
            #     prev_simbol = textMessage[index-1]
            #     if textMessage == "5":
            #         user_data[sender]["degree"] = 5
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_good_degree)
            #         sheets_append_row(5, sender, comment)
            #     if len(textMessage) > 2 and next_simbol not in nums and prev_simbol not in nums:
            #         user_data[sender]["degree"] = 5
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_good_degree)
            #         sheets_append_row(5, sender, comment)

            # elif "1" in textMessage:
            #     index = textMessage.index("1")
            #     next_simbol = textMessage[index+1]
            #     prev_simbol = textMessage[index-1]
            #     if textMessage == "1":
            #         user_data[sender]["degree"] = 1
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_good_degree)
            #         sheets_append_row(1, sender, comment)
            #     if len(textMessage) > 2 and next_simbol not in nums and prev_simbol not in nums:
            #         user_data[sender]["degree"] = 1
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_not_good_degree)
            #         sheets_append_row(1, sender, comment)

            # elif "2" in textMessage:
            #     index = textMessage.index("2")
            #     next_simbol = textMessage[index+1]
            #     prev_simbol = textMessage[index-1]
            #     if textMessage == "2":
            #         user_data[sender]["degree"] = 2
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_good_degree)
            #         sheets_append_row(2, sender, comment)
            #     if len(textMessage) > 2 and next_simbol not in nums and prev_simbol not in nums:
            #         user_data[sender]["degree"] = 2
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_not_good_degree)
            #         sheets_append_row(2, sender, comment)

            # elif "3" in textMessage:
            #     index = textMessage.index("3")
            #     next_simbol = textMessage[index+1]
            #     prev_simbol = textMessage[index-1]
            #     if textMessage == "3":
            #         user_data[sender]["degree"] = 3
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_good_degree)
            #         sheets_append_row(3, sender, comment)
            #     if len(textMessage) > 2 and next_simbol not in nums and prev_simbol not in nums:
            #         user_data[sender]["degree"] = 3
            #         comment = textMessage
            #         user_data[sender]["comment"] = comment
            #         greenAPI.sending.sendMessage(
            #             chatId=chatId, message=text_of_not_good_degree)
            #         sheets_append_row(3, sender, comment)

            # elif "4" in textMessage:

        except Exception as ex:
            print(ex)
            pass
        print(sender)

def sheets_append_row(degree, phone, comment, feedback_data=None):
    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ JSON
    gc = gspread.service_account(
        filename='brave-design-383019-841912aaeec5.json')
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    sh = gc.open("FeedBack ")
    # print(sh)
    worksheet = sh.get_worksheet(0)
    date = datetime.now()
    str_date = date.strftime( "%d//%m//%Y")
    str_time = date.strftime("%H:%M:%S")
    values = ([degree, phone, comment,str_date,str_time])
    worksheet.append_row(values=values)


if __name__ == "__main__":
    greenAPI.webhooks.startReceivingNotifications(onEvent)

