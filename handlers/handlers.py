from aiogram import types
from main import dp, bot
from aiogram.dispatcher.filters.state import State
from keyboards.keyboards import start_kb
from main import db


@dp.message_handler(commands=["start"], state="*")
async def start(message: types.Message):
    markup = await start_kb()

    await message.answer("""–≠—Ç–æ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –æ–±—â–∏—Ö —Å–æ–±—Ä–∞–Ω–∏–π. –û–Ω –º–æ–∂–µ—Ç:
üöÄ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–º–µ—â–µ–Ω–∏—è–º –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º
ü§≥ –∑–∞–Ω–µ—Å—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∂–∏–ª—å—Ü–æ–≤ –∏ –∞–Ω–∫–µ—Ç—ã —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤
ü§ñ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp (–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—å–µ—Ä–∂ –¥–æ–º–∞)
üí¨ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≥–æ—Å—Ç–µ–π –∏ –∂–∏–ª—å—Ü–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—å–µ—Ä–∂–∞ –¥–æ–º–∞
üì¢ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö –∂–∏–ª—å—Ü–æ–≤ –æ–± –æ–±—â–∏—Ö —Å–æ–±—Ä–∞–Ω–∏—è—Ö –≤ –¥–æ–º–µ
‚úÖ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –±—é–ª–ª–µ—Ç–µ–Ω–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è""", reply_markup=markup)


@dp.callback_query_handler(lambda call: call.data == "cancel_from_form")
async def decline_new_form_user(callback: types.CallbackQuery):
    await callback.message.answer("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ")


@dp.callback_query_handler(lambda call: call.data == "add_from_form")
async def accept_new_form_user(callback: types.CallbackQuery):
    try:
        await callback.message.answer("")
    except Exception as ex:
        await callback.message.answer(ex)
